// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YCompany.Vendor.DataAccess;

#nullable disable

namespace YCompanyVendorAPI.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    [Migration("20240424081451_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YCompany.Vendor.Domain.Entities.PoliciesOffered", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PoliciesOffered");
                });

            modelBuilder.Entity("YCompany.Vendor.Domain.Entities.Vendors", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"));

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoliciesOfferedId")
                        .HasColumnType("int");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorId");

                    b.HasIndex("PoliciesOfferedId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("YCompany.Vendor.Domain.Entities.Vendors", b =>
                {
                    b.HasOne("YCompany.Vendor.Domain.Entities.PoliciesOffered", "PoliciesOffered")
                        .WithMany()
                        .HasForeignKey("PoliciesOfferedId");

                    b.Navigation("PoliciesOffered");
                });
#pragma warning restore 612, 618
        }
    }
}
